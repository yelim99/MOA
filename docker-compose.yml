version: '3.8'
services:
  redis:
    image: redis
    container_name: redis
    environment:
      TZ: Asia/Seoul
    networks:
      - mongoCluster      
    ports:
      - "6379:6379"  # 호스트와 컨테이너 간의 포트 매핑
    command: ["redis-server", "--bind", "0.0.0.0", "--protected-mode", "no"]  # 모든 IP에서 접근 허용 및 보호 모드 비활성화
    restart: always  # 컨테이너가 종료되면 자동 재시작

  springboot:
    image: backend
    build: ./backend  # backend 디렉토리에서 Dockerfile을 사용해 이미지 빌드
    container_name: backend
    env_file: /home/ubuntu/config/.env
    volumes:
      - /home/ubuntu/config/firebase-adminsdk.json:/app/resources/firebase-adminsdk.json
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /app/resources/firebase-adminsdk.json
      TZ: Asia/Seoul
    ports:
      - "8081:8081"
    networks:
      - mongoCluster
    depends_on:
      - redis
      - mysql
      - mongo1
      - mongo2
      - mongo3

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rlarlckd
      TZ: Asia/Seoul
    ports:
      - "3306:3306"
    volumes:
      - /home/ubuntu/mysql-data:/var/lib/mysql
    networks:
      - mongoCluster

  mongo1:
    image: mongo:latest
    hostname: mongo1
    container_name: mongo1
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rlarlckd
    ports:
      - 27017:27017
    volumes:
      - /home/ubuntu/mongo-data1:/data/db
      - /home/ubuntu/key/mongodb.key:/etc/mongodb.key
      - /home/ubuntu/config/mongod.conf:/etc/mongod.conf
      - /home/ubuntu/config/mongo-init-replica.sh:/docker-entrypoint-initdb.d/mongo-init-replica.sh
    command: 'mongod --replSet myReplicaSet --keyFile /etc/mongodb.key --bind_ip_all'
    networks:
      - mongoCluster

  mongo2:
    image: mongo:latest
    hostname: mongo2
    container_name: mongo2
    restart: always
    depends_on:
      - mongo1
    networks:
      - mongoCluster
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rlarlckd
    ports:
      - 27018:27017
    volumes:
      - /home/ubuntu/mongo-data2:/data/db
      - /home/ubuntu/key/mongodb.key:/etc/mongodb.key
      - /home/ubuntu/config/mongod.conf:/etc/mongod.conf
    command: 'mongod --replSet myReplicaSet --keyFile /etc/mongodb.key --bind_ip_all'

  mongo3:
    image: mongo:latest
    hostname: mongo3
    container_name: mongo3
    restart: always
    depends_on:
      - mongo2
    networks:
      - mongoCluster
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rlarlckd
    ports:
      - 27019:27017
    volumes:
      - /home/ubuntu/mongo-data3:/data/db
      - /home/ubuntu/key/mongodb.key:/etc/mongodb.key
      - /home/ubuntu/config/mongod.conf:/etc/mongod.conf
    command: 'mongod --replSet myReplicaSet --keyFile /etc/mongodb.key --bind_ip_all'

networks:
  mongoCluster:
    driver: bridge